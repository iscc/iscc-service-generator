"""
Django settings for iscc_service_generator project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "replace-me-for-production"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "constance",
    "constance.backends.database",
    "admin_interface",
    "colorfield",
    "iscc_service_generator.apps.GeneratorAdminConfig",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_json_widget",
    "django_object_actions",
    "iscc_generator",
    "django_q",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "iscc_service_generator.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "iscc_service_generator.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / ".scratch/db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/


STATIC_ROOT = BASE_DIR / ".scratch/static"
STATIC_URL = "static/"


MEDIA_ROOT = BASE_DIR / ".scratch/media"
MEDIA_URL = "media/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

DATETIME_FORMAT = "Y-m-d H:i:s"
USE_L10N = False

FIXTURE_DIRS = [BASE_DIR / "iscc_service_generator/fixtures"]
X_FRAME_OPTIONS = "SAMEORIGIN"
SILENCED_SYSTEM_CHECKS = ["security.W019"]


# TODO: check if chache is required by django-q
# CACHES = {
#     "default": {
#         "BACKEND": "django.core.cache.backends.db.DatabaseCache",
#         "LOCATION": "cache_table",
#     }
# }

Q_CLUSTER = {
    "name": "DjangORM",
    "workers": 4,
    "timeout": 90,
    "retry": 120,
    "queue_limit": 50,
    "bulk": 10,
    "orm": "default",
    "sync": True,
}


CONSTANCE_CONFIG = {
    "PREVIEW_IMAGE_SIZE": (128, "Size of generated preview images in number of pixels"),
    "ENABLE_GRANULAR_FEATURES": (False, "Calculate granular features for media assets"),
    "PROCESSING_TIMEOUT": (
        1000,
        "Number of milliseconds to wait for a background task before returning an async task instead",
    ),
    "ENABLE_LIST_ENDPOINTS": (
        False,
        "Enables REST Api endpoints that can list objects "
        "(do not enable on public instances without authentication)",
    ),
    "RESULT_HOOK_URL": (
        "none",
        "An URL to which the background processing results should be deliverd "
        "(must be a an endpoint accepting POST requests with a json body)",
        "url_field",
    ),
    "RATE_LIMIT": (
        "16/m",
        "IP based rate limit for API calls",
        "rate_limit_field",
    ),
}
CONSTANCE_BACKEND = "constance.backends.database.DatabaseBackend"
CONSTANCE_ADDITIONAL_FIELDS = {
    "url_field": ["django.forms.fields.CharField"],
    "rate_limit_field": [
        "django.forms.fields.ChoiceField",
        {
            "widget": "django.forms.Select",
            "choices": (
                ("4/m", "4 requests per minute"),
                ("8/m", "8 requests per minute"),
                ("16/m", "16 requests per minute"),
                ("32/m", "32 requests per minute"),
                ("64/m", "64 requests per minute"),
                ("128/m", "128 requests per minute"),
                ("254/m", "254 requests per minute"),
                ("512/m", "512 requests per minute"),
                ("1024/m", "1024 requests per minute"),
            ),
        },
    ],
}
